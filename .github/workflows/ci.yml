name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Release, Debug]
        include:
          - os: ubuntu-latest
            cc: gcc
            cxx: g++
          - os: macos-latest
            cc: clang
            cxx: clang++
          - os: windows-latest
            cc: null # Uses Visual Studio's default
            cxx: null # Uses Visual Studio's default

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive # 如果你有子模块

      - name: Install Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install libboost-dev libboost-system-dev libboost-thread-dev

      - name: Install Dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install boost

      - name: Set up MSVC environment (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64 # Adjust as needed (x64, x86, arm64)
          #vs_version: 2019 #可选，指定VS版本

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_C_COMPILER=${{ matrix.cc }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -S ${{github.workspace}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }}

      - name: Test (Optional - If you have tests)
        if: matrix.build_type == 'Release'  # Only run tests on Release build
        run: |
          cd ${{github.workspace}}/build
          ctest -C ${{ matrix.build_type }} .
          # or if you have a specific test executable
          # ./my_test_executable